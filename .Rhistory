p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f, layout = c(2,1))
v1
v2
myedit("plot1.R")
source(pathtofile("plot1.R"), local = TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local = TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local = TRUE)
xyplot(price~carat | color*cut, data = diamonds)
xyplot(price~carat | color*cut, data = diamonds, strip = FALSE, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price~carat | color*cut, data = diamonds, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
sample(colors(), 10)
pal <- colorRamp(c("red,"blue""))
pal <- colorRamp(c("red,"blue"))
pal <- colorRamp(c("red","blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6))
colorRampPalette(c("red","blue"))
p1 <- colorRampPalette(c("red","blue"))
p1(2)
pal(seq(0,1,len=6))
p1(6)
CC0033
0xcc
colorRampPalette(c("red","yellow"))
p2 <- colorRampPalette(c("red","yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?fun(rgb)
?rgb
p3 <- colorRampPalette(c("blue", "green"))
p3 <- colorRampPalette(c("blue","green"),alpha=.5)
p3(5)
plot(x, y, pch = 19, col = rgb(0, .5, .5))
plot(x, y, pch = 19, col = rgb(0, .5, .5, .3))
cols <- brewer.pal(3, "BuGn")
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(20))
image(volcano, clo = pal(20))
image(volcano, col = pal(20))
image(volcano, col = p1(20))
str(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, geom = c("point", "smooth"))
qplot(hwy, data = mpg, color = drv)
qplot(y=hwy, data = mpg, color = drv)
myhigh
qplot(drv, hwy, data = mpg, geom = "boxplot")
qplot(drv, hwy, data = mpg, geom = "boxplot", color = manufacturer)
qplot(hwy, data = mpg, aesthetic = drv)
qplot(hwy, data = mpg, aesthetic = drv)
?qplot(hwy, data = mpg, aesthetic = drv)
?qplot(hwy, data = mpg, fill = drv)
qplot(hwy, data = mpg, fill = drv)
scatterplot (displ, hwy, data = mpg, facets = ~drv)
scatterplot (displ, hwy, data = mpg, facets = .~drv)
scatterplot(displ, hwy, data = mpg, facets = .~drv)
qplot(displ, hwy, data = mpg, facets = .~drv)
qplot(hwy, data = mpg, facets =drv~.)
qplot(hwy, data = mpg, facets = drv ~ ., binwidth = 2)
qplot(displ, hwy, data = mpg, geom=c("point","smooth"), facets = .~drv)
g <- ggplot(mpg, displ, hwy)
g <- ggplot(mpg, c(displ, hwy)
)
g <- ggplot(mpg, hwy)
?ggplot
g <- ggplot(mpg, aes(displ, hwy)
)
summary(g)
g+geom_point()
geom_smooth()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method = "lm")
g+geom_point()+geom_smooth(method = "lm")+facet_grid(. ~ drv)
g+geom_point()+geom_smooth(method = "lm")+facet_grid(. ~ drv)+ggtitle("Swirl Rules!")
g+geom_point(color = "pink", size = 4, alpha = 1/2)
g+geom_point(size = 4, alpha = 1/2, aes(color = drv))
g+geom_point(size = 4, alpha = 1/2, aes(color = drv))+labs(title = "Swirl Rules!")+labs(x="Displacement", y = "Hwy Mileage")
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x="Displacement",
| y="Hwy Mileage")
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy Mileage")
g + geom_point(aes(color = drv), size=2, alpha=1/2)+geom_smooth(size=4, linetype=3, method="lm", se=FALSE)
g + geom_point(aes(color = drv))+theme_bw(base_family="Times")
plot(myx, myy, type="l", ylim=c(-3,3))
g <- ggplot(testdat, aes(x=myx, y=myy))
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim(c(-3,3)))
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g <- ggplot(mpg, aes(x=displ, y=hwy, color=factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(*method="lm", se=FALSE, size=2, color="black")
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black")
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black")+labs(x="Displacement", y="Highway Mileage", title = "Swirl Rules!")
swirl()
str(diamonds)
qplot(price, data=diamonds)
range(diamonds$price)
qplot(price, data=diamonds, binwidth=18497/30)
brk
counts
qplot(price, data=diamonds, binwidth=18497/30, fill=cut)
qplot(price, data=diamonds, geom="density")
qplot(price, data=diamonds, geom="density", color=cut)
qplot(carat, price)
qplot(carat, price, data=diamonda)
qplot(carat, price, data=diamonds)
qplot(carat, price, data=diamonds, shape=cut)
qplot(carat, price, data=diamonds, color=cut)
qplot(carat, price, data=diamonds, color=cut, geom_smooth(method="lm"))
qplot(carat,price,data=diamonds, color=cut) + geom_smooth(method="lm")
qplot(carat,price,data=diamonds, color=cut, facets = .~cut) + geom_smooth(method="lm")
g <- ggplot(diamonds, aes(depth, price))
summary(g)
g+geom_point(alpha=1/3)
cutpoints <- quantile(diamonds$carat, seq(0, 1, length= 4), na.rm = TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(depth, price))
g+geom_point(alpha=1/3)+facet_grid(cut ~ car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut ~ car2)+geom_smooth(method="lm", size=3, color="pink")
g <- ggplot(diamonds, aes(carat, price))
ggplot(diamonds,aes(carat,price))+geom_boxplot()+facet_grid(.~cut)
swirl()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(swirl)
swirl()
dist(dataFrame)
hclust(distxy)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5, col="blue")
abline(h=.4, col="red")
5
12
abline(h=.05, col="green")
dist(dFsm)
hc
heatmap(dataMatrix, col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
swirl()
swirl()
swirl()
library(swirl)
swirl()
swirl()
dist(dataFrame)
hclust(distxy)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5, col="blue")
abline(h=.4, col="red")
5
12
abline(h=.05, col="green")
dist(dFsm)
hc
heatmap(dataMatrix, col=cm.colors(25))
heatmap(mt)
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx, cy, col=c("red", "orange", "purple"), pch=3, cex=2, lwd=2)
mdist(x, y, cx, cy)
apply(distTmp, 2, which.min)
points(x, y, pch=19, cex=2, col=cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col=cols1, pch=8, cex=2, lwd=2)
mdist(x, y, newCx, newCy)
apply(distTmp2, 2, which.min)
points(x, y, pch=19, cex=2, cex=2, col=cols1[newClust2])
points(x, y, pch=19, cex=2, cex=2, col=cols1[newClust2])
points(x, y, pch=19, cex=2, col=cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col=cols1, pch=9, cex=2, lwd=2)
kmeans(dataFrame, 3)
kmObj$iter
plot(x,y, col=kmObj$cluster, pch=19, cex=2)
points(kmObj$centers, col=c("black","red","green"), pch=3, cex=3)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
plot(x,y, col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x,y, col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x,y, col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
sourse("addPatt.R", local=TRUE)
source("addPatt.R", local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu%*%diag%*%t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- (svd1$u[,1]*svd1$d[1])%*%svd1$v[1,]
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- (svd1$u[,1:2] * svd1$d[1:2]) %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% svd1$d[1:2] %*% t(svd1$v[,1:2])
a2 <- svd1$u[, 1:2] %*% svd1$d[1:2] %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a2 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
swirl()
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
table(ssd$subject))
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub[,1:12])
names(sub1[,1:12])
myedit(showXY.R)
myedit("showXY.R")
showMe(1:6)
dist(sub1[,1:3])
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col=unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
mplclust(hclustering, lab.col=unclass(sub1$activity))
myplclust(hclustering, lab.col=unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
svd1$u
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,10:12])
Type mdist <- dist(sub1[,c(10:12,maxCon)])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub[,--c(562,563)], set = 6)
kClust <- kmeans(sub[,--c(562,563)], centers =  = 6)
kClust <- kmeans(sub[,--c(562,563)], centers = 6)
kClust <- kmeans(sub[,-c(562,563)], centers = 6)
kClust <- kmeans(sub[,-c(562,563)], centers = 6)
kClust <- kmeans(sub1[,-c(562,563)], centers = 6)
table(kClust$cluster, sub1$activit)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[,-c(562,563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12], pch = 19, ylab = "Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot (kClust$centers[walkdown,1:12], pch =19, ylab="Walkdown Cluster")
data1 <- read.csv("activity.csv")
setwd("~/Datalab/Course5/Week2/Course5ProjectWeek2")
data1 <- read.csv("activity.csv")
stepdata <- data1 %>% group_by(date) %>% summarise(totalsteps=sum(steps, na.rm=TRUE))
test <- require(dplyr)
if (test==FALSE) {
install.packages("dplyr")
library(dplyr)
}
test <- require(tidyr)
if (test==FALSE) {
install.packages("tidyr")
library(tidyr)
}
stepdata <- data1 %>% group_by(date) %>% summarise(totalsteps=sum(steps, na.rm=TRUE))
stepdata$date <- as.Date(as.character(stepdata$date))
?hist
hist(stepdata$totalsteps)
hist(stepdata$totalsteps, xlab = "Total steps per day", ylab = "Number of days")
hist(stepdata$totalsteps, xlab = "Total steps per day", ylab = "Number of days", main = "Histogram of total steps per day")
mean(stepdata$totalsteps)
median(stepdata$totalsteps)
print(c("Mean value:", mean(stepdata$totalsteps)))
print(c("Mean value:", mean(stepdata$totalsteps)))
plot(data1$interval, data1$steps, type="l")
max(data1$interval)
plot(data1$interval[20:50], data1$steps, type="l")
plot(data1$interval[20:50], data1$steps[20:50], type="l")
plot(data1$interval, data1$steps, type="l")
plot(data1$interval, data1$steps)
intvdata <- data1 %>% group_by(interval) %>% summarise(avgsteps=mean(steps, na.rm=TRUE))
plot(intvdata$interval, intvdata$avgsteps)
plot(intvdata$interval, intvdata$avgsteps, type="l")
?sort
plot(intvdata$interval, intvdata$avgsteps, type="l", xlab = "Interval ID during day", ylab = "Number of steps per 5min", main = "Avg number of steps per interval")
?max
?max.col
max.col(intvdata$avgsteps)
intvdata$interval[which.max(intvdata$avgsteps)]
sum(is.na(data1$steps))
dim(data1)
head(intvdata)
head(data1)
?which
intvdata$avgsteps[which(intvdata$interval == data1[5,3])]
intvdata$avgsteps[which(intvdata$interval == data1[855,3])]
intvdata$avgsteps[which(intvdata$interval == 850)]
data2 <- data1
for i in 1:dim(data1)[1]{
if (is.na(data1$steps[i])==TRUE) {
data2[i,1] <- intvdata$avgsteps[which(intvdata$interval == data1[i,3])]
}
}
data2 <- data1
maxrow <- dim(data1)[1]
for i in 1:maxrow{
if (is.na(data1$steps[i])==TRUE) {
data2[i,1] <- intvdata$avgsteps[which(intvdata$interval == data1[i,3])]
}
}
data2 <- data1
maxrow <- dim(data1)[1]
for i in 1:maxrow {
if (is.na(data1$steps[i])==TRUE) {
data2[i,1] <- intvdata$avgsteps[which(intvdata$interval == data1[i,3])]
}
}
data2 <- data1
maxrow <- dim(data1)[1]
for i in 1:2 {
if (is.na(data1$steps[i])==TRUE) {
data2[i,1] <- intvdata$avgsteps[which(intvdata$interval == data1[i,3])]
}
}
data2 <- data1
maxrow <- dim(data1)[1]
i <- NULL
for i in 1:maxrow {
if (is.na(data1$steps[i])==TRUE) {
data2[i,1] <- intvdata$avgsteps[which(intvdata$interval == data1[i,3])]
}
}
data2 <- data1
maxrow <- dim(data1)[1]
for (i in 1:maxrow) {
if (is.na(data1$steps[i])==TRUE) {
data2[i,1] <- intvdata$avgsteps[which(intvdata$interval == data1[i,3])]
}
}
head(data2)
?weekdays
mutate(data2, weekday = weekdays(date))
data2$date <- as.Date(as.character(data2$date))
mutate(data2, weekday = weekdays(date))
Sys.setlocale("LC_ALL","English")
mutate(data2, weekday = weekdays(date))
mutate(data2, weekday = weekdays(date, abbreviate = TRUE))
data2 <- mutate(data2, weekday = weekdays(date, abbreviate = TRUE))
data2[1,4] == Mon
data2[1,4] == "Mon"
(data2[1,4] == "Mon")|(data2[1,4] == "Tue")
maxrow <- dim(data2)[1]
for (i in 1:maxrow) {
if ((data2[i,4] == "Sat")|(data2[i,4] == "Sun")) {
data2[i,4] <- "weekend"
}
else {
data2[i,4] <- "weekday"
}
}
head(data2)
class(data2[1,4])
mutate(data2, weekday = weekdays(date))
maxrow <- dim(data2)[1]
for (i in 1:maxrow) {
if ((data2[i,4] == "Sat")|(data2[i,4] == "Sun")) {
data2[i,4] <- as.factor("weekend")
}
else {
data2[i,4] <- as.factor("weekday")
}
}
mutate(data2, weekday = weekdays(date, abbreviate = TRUE)
maxrow <- dim(data2)[1]
for (i in 1:maxrow) {
if ((data2[i,4] == "Sat")|(data2[i,4] == "Sun")) {
data2[i,4] <- as.factor("weekend")
}
else {
data2[i,4] <- as.factor("weekday")
}
}
class(data2[1,4])
data2[1,4] <- as.factor("weekday")
class(data2[1,4])
data2$weekday <- as.factor(data2$weekday)
class(data2[1,4])
data2day <- filter(data2, data2$weekday == "weekday")
data2day <- filter(data2, data2$weekday = "weekday")
data2day <- filter(data2, data2$weekday == weekday)
data2day <- filter(data2, data2$weekday == weekend)
data2day <- filter(data2, data2$weekday == "weekend")
?subset
data2day <- subset(data2, data2$weekday == "weekend")
data2day <- subset(data2, weekday == "weekend")
head(data2)
tail(data2)
mutate(data2, weekday = weekdays(date, abbreviate = TRUE)
maxrow <- dim(data2)[1]
for (i in 1:maxrow) {
if ((data2[i,4] == "Sat")|(data2[i,4] == "Sun")) {
data2[i,4] <- "weekend"
}
else {
data2[i,4] <- "weekday"
}
}
data2$weekday <- as.factor(data2$weekday)
tail(data2)
head(data2)
mutate(data2, weekday = weekdays(date, abbreviate = TRUE)
maxrow <- dim(data2)[1]
for (i in 1:maxrow) {
if ((data2[i,4] == "Sat")|(data2[i,4] == "Sun")) {
data2[i,4] <- "weekend"
}
else {
data2[i,4] <- "weekday"
}
}
knitr::opts_chunk$set(echo = TRUE, message = FALSE, error = FALSE, warning = FALSE, cache = TRUE)
mutate(data2, weekday = weekdays(date, abbreviate = TRUE)
maxrow <- dim(data2)[1]
mutate(data2, weekday = weekdays(date, abbreviate = TRUE)
for (i in 1:dim(data2)[1]) {
mutate(data2, weekday = weekdays(date, abbreviate = TRUE))
for (i in 1:dim(data2)[1]) {
if ((data2[i,4] == "Sat")|(data2[i,4] == "Sun")) {
data2[i,4] <- "weekend"
}
else {
data2[i,4] <- "weekday"
}
}
mutate(data2, weekday = weekdays(date, abbreviate = TRUE))
for (i in 1:dim(data2)[1]) {
if ((data2[i,4] == "Sat")|(data2[i,4] == "Sun")) {
data2[i,4] <- "weekend"
}
else {
data2[i,4] <- "weekday"
}
}
mutate(data2, weekday = weekdays(date, abbreviate = TRUE))
data2 <- mutate(data2, weekday = weekdays(date, abbreviate = TRUE))
for (i in 1:dim(data2)[1]) {
if ((data2[i,4] == "Sat")|(data2[i,4] == "Sun")) {
data2[i,4] <- "weekend"
}
else {
data2[i,4] <- "weekday"
}
}
head(data2)
data2day <- subset(data2, weekday == "weekend")
data2day <- subset(data2, weekday == "weekday")
data2end <- subset(data2, weekday == "weekend")
data2day <- subset(data2, weekday == "weekday")
intvdata2end <- data2end %>% group_by(interval) %>% summarise(avgsteps=mean(steps, na.rm=TRUE))
intvdata2day <- data2day %>% group_by(interval) %>% summarise(avgsteps=mean(steps, na.rm=TRUE))
head(data2)
class(data2[1,2])
?plot
plot(intvdata2end$interval, intvdata2end$avgsteps, type="l", xlab = "Interval ID during day", ylab = "Number of steps per 5min", main = "Weekend: Avg number of steps per interval")
plot(intvdata2end$interval, intvdata2end$avgsteps, type="l", xlab = "Interval ID during day", ylab = "Number of steps per 5min", main = "Weekend: Avg number of steps per interval", ylim = c(0,200))
